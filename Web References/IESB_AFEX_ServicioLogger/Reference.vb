'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace IESB_AFEX_ServicioLogger
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IESB_AFEX_ServicioLoggerSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class IESB_AFEX_ServicioLogger
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InsertarLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarLogDataDogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarLogDataDogHOSTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.AgenteAFEXTI.My.MySettings.Default.winPublicadorAFEX_IESB_AFEX_ServicioLogger_IESB_AFEX_ServicioLogger
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InsertarLogCompleted As InsertarLogCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarLogDataDogCompleted As InsertarLogDataDogCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarLogDataDogHOSTCompleted As InsertarLogDataDogHOSTCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLog(ByVal Log As Log) As String
            Dim results() As Object = Me.Invoke("InsertarLog", New Object() {Log})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLogAsync(ByVal Log As Log)
            Me.InsertarLogAsync(Log, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLogAsync(ByVal Log As Log, ByVal userState As Object)
            If (Me.InsertarLogOperationCompleted Is Nothing) Then
                Me.InsertarLogOperationCompleted = AddressOf Me.OnInsertarLogOperationCompleted
            End If
            Me.InvokeAsync("InsertarLog", New Object() {Log}, Me.InsertarLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLogCompleted(Me, New InsertarLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarLogDataDog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLogDataDog(ByVal LogDataDog As LogDataDog) As String
            Dim results() As Object = Me.Invoke("InsertarLogDataDog", New Object() {LogDataDog})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLogDataDogAsync(ByVal LogDataDog As LogDataDog)
            Me.InsertarLogDataDogAsync(LogDataDog, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLogDataDogAsync(ByVal LogDataDog As LogDataDog, ByVal userState As Object)
            If (Me.InsertarLogDataDogOperationCompleted Is Nothing) Then
                Me.InsertarLogDataDogOperationCompleted = AddressOf Me.OnInsertarLogDataDogOperationCompleted
            End If
            Me.InvokeAsync("InsertarLogDataDog", New Object() {LogDataDog}, Me.InsertarLogDataDogOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLogDataDogOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLogDataDogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLogDataDogCompleted(Me, New InsertarLogDataDogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarLogDataDogHOST", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLogDataDogHOST(ByVal LogDataDog As LogDataDog, ByVal Source As String, ByVal Host As String) As String
            Dim results() As Object = Me.Invoke("InsertarLogDataDogHOST", New Object() {LogDataDog, Source, Host})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLogDataDogHOSTAsync(ByVal LogDataDog As LogDataDog, ByVal Source As String, ByVal Host As String)
            Me.InsertarLogDataDogHOSTAsync(LogDataDog, Source, Host, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLogDataDogHOSTAsync(ByVal LogDataDog As LogDataDog, ByVal Source As String, ByVal Host As String, ByVal userState As Object)
            If (Me.InsertarLogDataDogHOSTOperationCompleted Is Nothing) Then
                Me.InsertarLogDataDogHOSTOperationCompleted = AddressOf Me.OnInsertarLogDataDogHOSTOperationCompleted
            End If
            Me.InvokeAsync("InsertarLogDataDogHOST", New Object() {LogDataDog, Source, Host}, Me.InsertarLogDataDogHOSTOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLogDataDogHOSTOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLogDataDogHOSTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLogDataDogHOSTCompleted(Me, New InsertarLogDataDogHOSTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Log
        
        Private tipoContenidoField As TipoContenido
        
        Private contenidoField As String
        
        Private origenField As String
        
        Private descripcionField As String
        
        '''<remarks/>
        Public Property TipoContenido() As TipoContenido
            Get
                Return Me.tipoContenidoField
            End Get
            Set
                Me.tipoContenidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Contenido() As String
            Get
                Return Me.contenidoField
            End Get
            Set
                Me.contenidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Origen() As String
            Get
                Return Me.origenField
            End Get
            Set
                Me.origenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum TipoContenido
        
        '''<remarks/>
        Text
        
        '''<remarks/>
        Xml
        
        '''<remarks/>
        Json
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LogDataDog
        
        Private sourceField As LogDatadogSource
        
        Private durationField As Integer
        
        Private servicioField As String
        
        Private logDatadogStatusField As LogDatadogStatus
        
        Private contenidoField As String
        
        Private tagField As String
        
        Private fechaInicioField As Date
        
        Private fechaTerminoField As Date
        
        '''<remarks/>
        Public Property Source() As LogDatadogSource
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Duration() As Integer
            Get
                Return Me.durationField
            End Get
            Set
                Me.durationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Servicio() As String
            Get
                Return Me.servicioField
            End Get
            Set
                Me.servicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LogDatadogStatus() As LogDatadogStatus
            Get
                Return Me.logDatadogStatusField
            End Get
            Set
                Me.logDatadogStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Contenido() As String
            Get
                Return Me.contenidoField
            End Get
            Set
                Me.contenidoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaInicio() As Date
            Get
                Return Me.fechaInicioField
            End Get
            Set
                Me.fechaInicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaTermino() As Date
            Get
                Return Me.fechaTerminoField
            End Get
            Set
                Me.fechaTerminoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum LogDatadogSource
        
        '''<remarks/>
        [DEFAULT]
        
        '''<remarks/>
        EAFEX
        
        '''<remarks/>
        AFEXCHANGEWEB
        
        '''<remarks/>
        MONEYGRAM
        
        '''<remarks/>
        WSAFEXAPI
        
        '''<remarks/>
        AFEXCHANGEWEBDLL
        
        '''<remarks/>
        AFEXGIROSAPI
        
        '''<remarks/>
        MONITORAGENTES
        
        '''<remarks/>
        ELEKTRONCONSUMER
        
        '''<remarks/>
        WSCUMPLIMIENTO
        
        '''<remarks/>
        ESB_AFEX
        
        '''<remarks/>
        AFEXENTERPRISESERVICEBUS
        
        '''<remarks/>
        AFEXPRESSWEB
        
        '''<remarks/>
        PULPO
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum LogDatadogStatus
        
        '''<remarks/>
        Emergency
        
        '''<remarks/>
        [Error]
        
        '''<remarks/>
        Warn
        
        '''<remarks/>
        Info
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarLogCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarLogDataDogCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLogDataDogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLogDataDogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarLogDataDogHOSTCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLogDataDogHOSTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLogDataDogHOSTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
